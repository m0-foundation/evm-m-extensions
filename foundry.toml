[profile.default]
evm_version = "cancun"
gas_reports = ["*"]
gas_reports_ignore = []
ignored_error_codes = []
optimizer = true
optimizer_runs = 999999
solc_version = "0.8.26"
verbosity = 3
# Used to deploy transparent proxies
ffi = true
ast = true
build_info = true
extra_output = ["storageLayout"]
no_match_coverage = "script|test"
ignored_warnings_from = ["lib", "test", "script"]
fs_permissions = [
  { access = "read-write", path = "./deployments" },
  { access = "read-write", path = "./out" },
]

[lint]
lint_on_build = false

[profile.production]
build_info = true
sizes = true

[fuzz]
runs = 5_000

[invariant]
runs = 512            # The number of calls to make in the invariant tests
depth = 25            # The number of times to run the invariant tests
fail_on_revert = true # Fail the test if the contract reverts

[profile.ci.fuzz]
runs = 10_000

[profile.ci.invariant]
runs = 512
depth = 250

[rpc_endpoints]
localhost = "${LOCALHOST_RPC_URL}"
mainnet = "${MAINNET_RPC_URL}"
bsc = "${BSC_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
hyperliquid = "${HYPERLIQUID_RPC_URL}"
optimism = "${OPTIMISM_RPC_URL}"
plume = "${PLUME_RPC_URL}"

sepolia = "${SEPOLIA_RPC_URL}"
arbitrum_sepolia = "${ARBITRUM_SEPOLIA_RPC_URL}"
bsc_testnet = "${BSC_TESTNET_RPC_URL}"
curtis = "${APECHAIN_TESTNET_RPC_URL}"
optimism_sepolia = "${OPTIMISM_SEPOLIA_RPC_URL}"
soneium_minato_testnet = "${SONEIUM_TESTNET_RPC_URL}"

etherscan_api_key = "${ETHERSCAN_API_KEY}"

[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}", url = "${MAINNET_VERIFIER_URL}" }
arbitrum = { key = "${ETHERSCAN_API_KEY}", url = "${ARBITRUM_VERIFIER_URL}" }
bsc = { key = "${ETHERSCAN_API_KEY}", url = "${BSC_VERIFIER_URL}" }
hyperliquid = { key = "${ETHERSCAN_API_KEY}", url = "${HYPERLIQUID_VERIFIER_URL}" }
optimism = { key = "${ETHERSCAN_API_KEY}", url = "${OPTIMISM_VERIFIER_URL}" }

sepolia = { key = "${ETHERSCAN_API_KEY}", url = "${SEPOLIA_VERIFIER_URL}" }
arbitrum_sepolia = { key = "${ETHERSCAN_API_KEY}", url = "${ARBITRUM_SEPOLIA_VERIFIER_URL}" }
bsc_testnet = { key = "${ETHERSCAN_API_KEY}", url = "${BSC_TESTNET_VERIFIER_URL}" }
curtis = { key = "${ETHERSCAN_API_KEY}", url = "${APECHAIN_TESTNET_VERIFIER_URL}" }
optimism_sepolia = { key = "${ETHERSCAN_API_KEY}", url = "${OPTIMISM_SEPOLIA_VERIFIER_URL}" }

# See more config options at https://github.com/foundry-rs/foundry/tree/master/crates/config
